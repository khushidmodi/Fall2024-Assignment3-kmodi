@model Fall2024_Assignment3_kmodi.Models.ActorDetailsViewModel
@*@model Fall2024_Assignment3_kmodi.Models.Actor*@

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Actor</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Actor.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Actor.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.Age)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Actor.Age)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Actor.ImdbLink)
        </dt>
        <dd class="col-sm-10">
            @*@Html.DisplayFor(model => model.Actor.ImdbLink)*@
            <a href="@Model.Actor.ImdbLink" target="_blank">@Model.Actor.ImdbLink</a>
        </dd>
        @*<dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Photo)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Photo)
            </dd>*@
        <dt class="col-sm-2">
            Photo
        </dt>
        <dd class="col-sm-10">
            @if (Model.Actor.Photo != null && Model.Actor.Photo.Length > 0)
            {
                var base64 = Convert.ToBase64String(Model.Actor.Photo);
                var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                <img src="@imgSrc" height="auto" width="100px" style="border-radius:10px" />
            }
            else
            {
                <p>No photo available</p>
            }
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Actor.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<h5>Movies</h5>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movies)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-controller="Movie" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-controller="Movie" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-controller="Movie" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<h5>Overall Sentiment: @Model.AvgSentiment</h5>
<table class="table">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.AvgSentiment)*@
                <h7>Tweets</h7>
            </th>
            <th>
                <h7>Sentiments</h7>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tweetSentiment in Model.TweetsAndSentiments)
        {
            <tr>
                <td>@tweetSentiment[0]</td>
                <td>@tweetSentiment[1]</td>
            </tr>
        }
    </tbody>
</table>
